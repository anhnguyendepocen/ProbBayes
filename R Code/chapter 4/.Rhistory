lval_plus
x <- scan()
3.571
3.266
3.432
3.511
3.720
3.500
3.484
3.710
3.647
3.267
2.842
3.250
3.667
3.654
3.560
3.947
3.917
3.577
3.701
3.786
4.000
3.594
2.396
3.677
3.452
3.750
y <- c(3.971, 3.571, 3.266, 3.432,
3.511, 3.720, 3.500, 3.484,
3.710, 3.647, 3.267, 2.842,
3.250, 3.667, 3.654, 3.560,
3.947, 3.917, 3.577, 3.701,
3.786, 4.000, 3.594, 2.396,
3.677, 3.452, 3.750)
library(aplpack)
stem.leaf(y)
f < -c(24,	15,	5)
f <- c(24,	15,	5)
sum(f * c(5,4,3)) / sum(f)
sum(f * c(4,3,2)) / sum(f)
load(url("http://www-math.bgsu.edu/~albert/shotlink/Shotlink2014.Rdata"))
install.packages(c("esquisse", "farver", "haven", "mgcv", "naniar", "openssl", "packrat", "pkgdown", "RcppEigen", "readr", "rio", "RJSONIO", "survival"))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
library(tidyverse)
d2018 <- read_csv("sc2018_ip.csv")
HR <- filter(d2018, events == "home_run")
HR %>% mutate(phi = atan((hc_x - 125.42) / (198.27 - hc_y)) * 180 / pi) -> HR
(p <- ggplot(HR, aes(launch_angle, launch_speed)) +
geom_point(alpha = 0.2, color = "red"))
library(plotly)
ggplotly(p)
filter(HR, launch_speed < 82) %>%
select(player_name, game_date)
filter(HR, launch_angle < 13) %>%
select(player_name, game_date)
filter(HR, launch_angle < 18) %>%
select(player_name, game_date)
filter(HR, launch_angle < 17) %>%
select(player_name, game_date)
filter(HR, launch_angle < 18, launch_speed < 95) %>%
select(player_name, game_date)
filter(HR, launch_speed > 122) %>%
select(player_name, game_date)
filter(HR, launch_speed > 122) %>%
select(player_name, game_date)
filter(HR, launch_speed > 122) %>%
select(player_name, game_date)
filter(HR, launch_speed > 122) %>%
select(player_name, game_date)
filter(HR, launch_angle > 49) %>%
select(player_name, game_date)
h <- hist(rnorm(200))
class(h)
attributes(h)
h$breaks
h$equidist
library(LearnBayes)
fit <- laplace(betabinexch, c(0, 0), list(y = c(2, 3, 1, 2),))
fit <- laplace(betabinexch, c(0, 0), list(y = c(2, 3, 1, 2),
n = c(10,10, 10, 10)))
class(laplace)
?laplace
logpost=function(theta,data)
{
s=5
sum(-log(1+(data-theta)^2/s^2))
}
data=c(10,12,14,13,12,15)
start=10
laplace(logpost,start,data) -> fit
class(fit)
summary(fit)
install.git("bayesball/LearnBayes")
library(devtools)
install.git("bayesball/LearnBayes")
install_git("bayesball/LearnBayes")
install_github("bayesball/LearnBayes")
logpost=function(theta,data)
{
s=5
sum(-log(1+(data-theta)^2/s^2))
}
data=c(10,12,14,13,12,15)
start=10
laplace(logpost,start,data)
logpost=function(theta,data)
{
s=5
sum(-log(1+(data-theta)^2/s^2))
}
data=c(10,12,14,13,12,15)
start=10
laplace(logpost,start,data) -> fit
class(fit)
summary(fit)
plot(fit)
library(LearnBayes)
logpost=function(theta,data)
{
s=5
sum(-log(1+(data-theta)^2/s^2))
}
data=c(10,12,14,13,12,15)
start=10
laplace(logpost,start,data) -> fit
class(fit)
library(LearnBayes)
logpost=function(theta,data)
{
s=5
sum(-log(1+(data-theta)^2/s^2))
}
data=c(10,12,14,13,12,15)
start=10
laplace(logpost,start,data)  -> fit
class(fit)
summary(fit)
lm(mpg <- wt, data = mtcars) -> fit
names(mtcars)
lm(mpg ~ wt, data = mtcars) -> fit
class(fit)
print(lm)
print(fit)
summary(fit)
plot(fit)
par(ask = FALSE)
coef(fit)
install.packages(c("bookdown", "broom", "processx", "rsconnect", "units", "visNetwork"))
install.packages("units")
install.packages(c("bookdown", "brms", "callr", "classInt", "dslabs", "httpuv", "ps", "quantreg", "readr", "readxl", "sf", "slam", "tm"))
install.packages("sf")
my_packages <- c("tidyverse", "broom", "coefplot", "cowplot", "gapminder", "GGally", "ggrepel", "ggridges", "gridExtra", "here", "interplot", "margins", "maps", "mapproj", "mapdata", "MASS", "quantreg", "rlang", "scales", "survey", "srvyr", "viridis", "viridisLite", "devtools")
install.packages(my_packages,
repos = "http://cran.rstudio.com")
devtools::install_github("kjhealy/socviz")
library(socviz)
?socviz
titanic
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
library(tidyverse)
scip <- read_csv("four_years_ip.csv")
scip %>% group_by(Season) %>% count()
scip %>% mutate(Season = as.character(Season)) -> scip
scip %>% group_by(Season, Week) %>%
summarize(N = n(), HR = sum(events == "home_run"),
HR_Rate = HR / N * 100) -> S1
ggplot(S1, aes(Week, HR_Rate)) +
geom_point() + geom_smooth(se = FALSE) +
facet_wrap(~ Season, ncol=2)
hr_data <- filter(scip, events == "home_run")
summarize(hr_data, M = mean(launch_angle > 15 &
launch_angle < 40 & launch_speed > 90))
red_zone <- filter(scip, launch_angle > 15,
launch_angle < 40, launch_speed > 90,
launch_speed < 115) %>%
mutate(LA = cut(launch_angle, breaks = seq(15, 40, by=5)),
LS = cut(launch_speed, breaks = seq(90, 115, by=5)))
red_zone %>% group_by(LA, LS) %>%
summarize(N = n(), HR = sum(events == "home_run")) ->
S1
red_zone %>% group_by(Season, LA, LS) %>%
summarize(N = n(), HR = sum(events == "home_run")) ->
S2
head(S2)
View(S2)
92435 / 512354
S2 %>%
group_by(Season) %>%
summarize(HR = sum(HR), N = sum(H))
S2 %>%
group_by(Season) %>%
summarize(HR = sum(HR), N = sum(N))
S2 %>%
group_by(Season) %>%
summarize(HR = sum(HR), N = sum(N),
P = round(100 * HR / N, 1))
hr_data %>%
group_by(Season) %>%
count()
hr_data %>%
group_by(Season) %>%
summarize(N = n(), D = mean(hit_distance_sc, na.rm = TRUE))
factorial(10) / (factorial(3) * factorial(5) * factorial(2)) *
(1 / 6) ^ 3 * (2 / 6) ^ 5 * (3 / 6) ^ 2
112005 - 3500
112005 - 3500 - 29000
computemean <- function(v){
mean(v)
}
x <- c(1, 2, 3, 4)
y <- c(2, 4, 5, 7)
computemean(x)
variables <- c("x", "y")
computemean(variables[1])
computemean <- function(v){
v1 <- get(v)
mean(v1)
}
computemean(variables[1])
computemean <- function(v){
mean(v)
}
computemean(variables[1])
computemean <- function(v){
v1 <- get(v)
mean(v1)
}
computemean(variables[1])
lapply(variables, computemean)
sapply(variables, computemean)
mtcars$mpg
v <- "mpg"
mtcars$v
names(mtcars)
vs <- get(v)
library(CalledStrike)
jm <- collect_4_years("Jose Altuve")
jm
library(CalledStrike)
jm <- collect_4_years("Jose Altuve")
get_id("Jose Altuve")
collect_4_years <- function(player){
id <- get_id(player)
id <- id[length(id)]
d_15 <- get_sc_data(id, season = 2015)
d_16 <- get_sc_data(id, season = 2016)
d_17 <- get_sc_data(id, season = 2017)
d_18 <- get_sc_data(id, season = 2018)
d_all <- list(d_15, d_16, d_17, d_18)
N <- unlist(strsplit(player, " "))
names(d_all) <- paste(N[2], 2015:2018, sep = " ")
d_all
}
jm <- collect_4_years("Jose Altuve")
compare_contour(jm, type = "cs")
compare_contour(jm, type = "sw",
L = seq(0.1, 0.9, by = 0.1))
compare_contour(jm, type = "ms",
L = seq(0.1, 0.9, by = 0.1))
compare_contour(jm, type = "h",
L = seq(0.1, 0.9, by = 0.05))
compare_contour(jm, type = "hr",
L = seq(0.02, 0.20, by = 0.02))
compare_contour(jm, type = "ls",
L = seq(75, 95, by = 5))
compare_contour(jm, type = "sa",
L = seq(-30, 30, by = 10))
compare_contour(jm, type = "la",
L = seq(-10, 40, by = 10))
library(CalledStrike)
jm <- collect_4_years("Kris Bryant")
compare_contour(jm, type = "cs")
compare_contour(jm, type = "sw",
L = seq(0.1, 0.9, by = 0.1))
compare_contour(jm, type = "ms",
L = seq(0.1, 0.9, by = 0.1))
compare_contour(jm, type = "h",
L = seq(0.1, 0.9, by = 0.05))
compare_contour(jm, type = "hr",
L = seq(0.02, 0.20, by = 0.02))
compare_contour(jm, type = "ls",
L = seq(75, 95, by = 5))
compare_contour(jm, type = "sa",
L = seq(-30, 30, by = 10))
compare_contour(jm, type = "la",
L = seq(-10, 40, by = 10))
install.packages(c("benchmarkmeData", "caTools", "formatR", "gganimate", "knitr", "lme4", "Matrix", "mvtnorm", "purrr", "RcppArmadillo", "RCurl", "reticulate", "rgl", "RMySQL", "servr", "spam", "XML"))
install.packages(c("evaluate", "fields", "nimble", "openssl", "pillar", "tibble", "tidybayes", "zoo"))
library(TeachBayes)
df <- data.frame(p=c(.1, .3, .5, .7, .9),
Prior=rep(1/5, 5))
y <- 5
n <- 10
df$Likelihood <- dbinom(y, prob=df$p, size=n)
df <- bayesian_crank(df)
prior_post_plot(df, "Proportion")
prior_post_plot
Prior1 <- data.frame(p = seq(0.1, 1, length.out = 10),
Probability = rep(0.1, 10),
Type = "Prior 1")
Prior2 <- data.frame(p = seq(0.1, 1, length.out = 10),
Probability = c(0.05, 0.05, 0.05,
0:175, 0.175, 0.175, 0.175, 0.05, 0.05, 0.05),
Type = "Prior 2")
seq(0.1, 1, length.out = 10)
Prior1 <- data.frame(p = seq(0.1, 1, length.out = 10),
Probability = rep(0.1, 10),
Type = "Prior 1")
Prior2 <- data.frame(p = seq(0.1, 1, length.out = 10),
Probability = c(0.05, 0.05, 0.05,
0:175, 0.175, 0.175, 0.175, 0.05, 0.05, 0.05),
Type = "Prior 2")
Prior2 <- data.frame(p = seq(0.1, 1, length.out = 10),
Probability = c(0.05, 0.05, 0.05,
0.175, 0.175, 0.175, 0.175, 0.05, 0.05, 0.05),
Type = "Prior 2")
bothpriors <- rbind(Prior1, Prior2)
ggplot(bothpriors, aes(p, Probability, color = Type)) +
geom_segment(aes(xend = Model, yend = 0), size = Size,
lineend = "butt") +
facet_wrap(~Type, ncol = 1)
ggplot(bothpriors, aes(p, Probability, color = Type)) +
geom_segment(aes(xend = Model, yend = 0), size = 2,
lineend = "butt") +
facet_wrap(~Type, ncol = 1)
ggplot(bothpriors, aes(p, Probability, color = Type)) +
geom_segment(aes(xend = p, yend = 0), size = 2,
lineend = "butt") +
facet_wrap(~Type, ncol = 1)
ggplot(bothpriors, aes(p, Probability, color = Type)) +
geom_segment(aes(xend = p, yend = 0), size = 2,
lineend = "butt") +
facet_wrap(~Type, ncol = 1) +
increasefont()
library(CalledStrike)
ggplot(bothpriors, aes(p, Probability, color = Type)) +
geom_segment(aes(xend = p, yend = 0), size = 2,
lineend = "butt") +
facet_wrap(~Type, ncol = 1) +
increasefont()
prior_post_plot
ggplot(bothpriors, aes(p, Probability, color = Type)) +
geom_segment(aes(xend = p, yend = 0), size = 4,
lineend = "butt") +
facet_wrap(~Type, ncol = 1) +
increasefont()
ggplot(bothpriors, aes(p, Probability, color = Type)) +
geom_segment(aes(xend = p, yend = 0), size = 6,
lineend = "butt") +
facet_wrap(~Type, ncol = 1) +
increasefont()
ggplot(bothpriors, aes(p, Probability, color = Type)) +
geom_segment(aes(xend = p, yend = 0), size = 8,
lineend = "butt") +
facet_wrap(~Type, ncol = 1) +
increasefont()
crcblue <- "#2905a1"
ggplot(bothpriors, aes(p, Probability, color = Type)) +
geom_segment(aes(xend = p, yend = 0), size = 8,
lineend = "butt",
color = crcblue) +
facet_wrap(~Type, ncol = 1) +
increasefont()
beta_quantile(0.5, c(7, 10))
beta_quantile
col2rgb
col2rgb(crcblue)
crcblue
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
ages <- c(70, 47, 54, 46, 64, 69, 52, 61, 56, 55)
names <- c("Trump", "Obama", "W. Bush", "Clinton",
"H. W. Bush", "Regan", "Carter", "Ford",
"Nixon", "Johnson")
names(ages) <- names
ages
ages.months <- ages * 12
ages.months
age.young <- ages[ages < 50]
age.young <- ages[ages < 50]
age.young <- ages[ages < 50]
age.young
ages[year > 1975]
plot(year, age)
year <- c(2017, 2009, 2001, 1993, 1989, 1981, 1977, 1974, 1969, 1963)
plot(year, age)
plot(year, ages)
hand <- c("R", "R", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "R", "R", "L", "R", "R", "R", "R", "L")
gender <- c("M", "M", "F", "F", "M", "M", "F", "M", "F", "F", "M", "M", "F", "F", "F", "M", "M", "F", "M", "M", "M", "F", "M", "M", "M", "M")
barplot(hand)
hand <- c("R", "R", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "R", "R", "L", "R", "R", "R", "R", "L")
gender <- c("M", "M", "F", "F", "M", "M", "F", "M", "F", "F", "M", "M", "F", "F", "F", "M", "M", "F", "M", "M", "M", "F", "M", "M", "M", "M")
barplot(hand)
barplot(hand)
plot(hand)
hand
plot(hand)
hand_table <- table(hand)
hand_table
barplot(hand_table)
j <- 0:50
approximation <- sum(2 ^ j / factorial(j))
approximation
exp(2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
movies <- read_csv("http://www-math.bgsu.edu/~albert/3430/top100movies.csv")
movies$Rtime <- as.numeric(gsub('min', '',
movies$Runtime))
movies[movies$Year >= 2011, ]
movies[movies$Rtime == max(movies$Rtime), "Title"]
movies[movies$Rtime == max(movies$Rtime, na.rm = TRUE),
"Title"]
movies[movies$Rtime == min(movies$Rtime, na.rm = TRUE),
"Title"]
movies[movies$Rated == "G", "Title"]
movies$R_Votes <- round(movies$imdbVotes, -6)
View(movies)
hist(movies$Rtime)
table(movies$Rated)
year_table <- table(movies$Year)
barplot(year_table)
movies$CYear <- cut(movies$Year,
breaks = c(0, 1982, 2050),
labels = c("early", "late"))
boxplot(movies$Rtime ~ movies$CYear)
plot(movies$Metascore, movies$imdbRating)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
movies$R_Votes <- round(movies$imdbVotes, -5)
head(movies$R_Votes)
hist(movies$Year)
library(readr)
statcast2019 <- read_csv("Dropbox/2016 WORK/BLOG Baseball R/OTHER/StatcastData/statcast2019.csv")
View(statcast2019)
library(tidyverse)
scip <- filter(statcast2019, type == "X")
sum(scip$events == "home_run")
table(scip$events)
6002 / 111413
install.packages("gutenbergr")
citation(package = "ProbBayes")
setwd("~/Dropbox/BAYES BOOK/FINAL CODE & DATA/chapter 4")
## ------------------------------------------------------------------------
library(tidyverse)
library(TeachBayes)
crcblue <- crccolor()
## ------------------------------------------------------------------------
one_play <- function(){
flips <- sample(c("H", "T"),
size = 5,
replace = TRUE)
2 * sum(flips == "H") -
2 * sum(flips == "T")
}
G <- replicate(10000, one_play())
ggplot(data.frame(Y=G), aes(G)) +
geom_bar(width=1.5, fill=crcblue) +
ylab("Frequency") +
increasefont()
crcblue <- "#2905a1"
ggplot(data.frame(Y=G), aes(G)) +
geom_bar(width=1.5, fill=crcblue) +
ylab("Frequency") +
increasefont()
## ------------------------------------------------------------------------
df <- data.frame(G = c(-10, -6, -2, 2, 6, 10),
Probability = c(1, 5, 10, 10, 5, 1) / 32)
prob_plot(df)
## ------------------------------------------------------------------------
mean(G >= 5)
## ------------------------------------------------------------------------
mean(G > 0)
## ------------------------------------------------------------------------
mean(G)
## ------------------------------------------------------------------------
die1 <- c(1, 1, 1, 1, 1, 1) / 6
die2 <- c(1, 1, 4, 4, 1, 1) / 12
## ------------------------------------------------------------------------
set.seed(123)
rolls1 <- sample(1:6, prob = die1,
size = 50,
replace = TRUE)
rolls2 <- sample(1:6, prob = die2,
size = 50,
replace = TRUE)
rolls <- data.frame(Roll = c(rolls1, rolls2),
Type = c(rep("Fair", 50),
rep("Biased", 50)))
ggplot(rolls, aes(Type, Roll)) +
geom_jitter(width = 0.1, height = 0.2) +
coord_flip()
ggplot(rolls, aes(Roll)) +
geom_dotplot(dotsize = 0.7, color = crcblue) +
facet_wrap(~ Type, ncol=1) +
increasefont()
increasefont
ggplot(rolls, aes(Roll)) +
geom_dotplot(dotsize = 0.7, color = crcblue) +
facet_wrap(~ Type, ncol=1) +
increasefont(Size = 24)
ggsave(paste(address, "chapter3/", "discrete2.pdf", sep=""))
address <- "/Users/jamesalbert/Dropbox/BAYES BOOK/LATEX/figures/"
ggsave(paste(address, "chapter3/", "discrete2.pdf", sep=""))
ggsave(paste(address, "chapter4/", "discrete2.pdf", sep=""))
